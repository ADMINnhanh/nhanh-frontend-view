import{d as _,aP as M,av as S,ag as W,o as z,c as K,u as X}from"./index-DRU1KIa-.js";import{W as Y,P as B,O as I,S as F,D as T,al as U,am as q,x as A,an as G}from"./OrbitControls-BhXoMS-P.js";function N(D,g){const{canvas:f,inputElement:i}=D,w=new Y({antialias:!0,canvas:f}),E=75,H=2,O=.1,x=100,u=new B(E,H,O,x);u.position.z=4;const b=new I(u,i);b.target.set(0,0,0),b.update();const y=new F;{const r=new T(16777215,1);r.position.set(-1,2,4),y.add(r)}const P=1,j=1,h=1,k=new U(P,j,h);function v(t,n,r){const p=new q({color:n}),l=new A(t,p);return y.add(l),l.position.x=r,l}const C=[v(k,4500104,0),v(k,8930474,-2),v(k,11176004,2)];class L{constructor(){this.raycaster=new G,this.pickedObject=null,this.pickedObjectSavedColor=0}pick(n,r,p,l){this.pickedObject&&(this.pickedObject.material.emissive.setHex(this.pickedObjectSavedColor),this.pickedObject=void 0),this.raycaster.setFromCamera(n,p);const R=this.raycaster.intersectObjects(r.children);R.length&&(this.pickedObject=R[0].object,this.pickedObjectSavedColor=this.pickedObject.material.emissive.getHex(),this.pickedObject.material.emissive.setHex(l*8%2>1?16776960:16711680))}}const m={x:-2,y:-2},e=new L;d();function o(t){const n=t.domElement,r=i.clientWidth,p=i.clientHeight,l=n.width!==r||n.height!==p;return l&&t.setSize(r,p,!1),l}function s(t){t*=.001,o(w)&&(u.aspect=i.clientWidth/i.clientHeight,u.updateProjectionMatrix()),C.forEach((n,r)=>{const p=1+r*.1,l=t*p;n.rotation.x=l,n.rotation.y=l}),e.pick(m,y,u,t),w.render(y,u),(!g||g())&&requestAnimationFrame(s)}requestAnimationFrame(s);function a(t){const n=i.getBoundingClientRect();return{x:t.clientX-n.left,y:t.clientY-n.top}}function c(t){const n=a(t);m.x=n.x/i.clientWidth*2-1,m.y=n.y/i.clientHeight*-2+1}function d(){m.x=-1e5,m.y=-1e5}i.addEventListener("mousemove",c),i.addEventListener("mouseout",d),i.addEventListener("mouseleave",d),i.addEventListener("touchstart",t=>{t.preventDefault(),c(t.touches[0])},{passive:!1}),i.addEventListener("touchmove",t=>{c(t.touches[0])}),i.addEventListener("touchend",d)}const V=["id"],Z=_({__name:"index",setup(D){const g=M(),f=x(["ctrlKey","metaKey","shiftKey","button","pointerType","clientX","clientY","pointerId","pageX","pageY"]),i=x(["deltaX","deltaY"]),w=x(["ctrlKey","metaKey","shiftKey","keyCode"]);function E(e,o){e.preventDefault(),i(e,o)}function H(e){e.preventDefault()}function O(e,o,s){for(const a of o)s[a]=e[a]}function x(e){return function(s,a){const c={type:s.type};O(s,e,c),a(c)}}function u(e,o){e.preventDefault();const s=[],a={type:e.type,touches:s};for(let c=0;c<e.touches.length;++c){const d=e.touches[c];s.push({pageX:d.pageX,pageY:d.pageY,clientX:d.clientX,clientY:d.clientY})}o(a)}const b={37:!0,38:!0,39:!0,40:!0};function y(e,o){const{keyCode:s}=e;b[s]&&(e.preventDefault(),w(e,o))}let P=0;class j{constructor(o,s,a){const c=this;c.id=P++,c.worker=s;const d=n=>{c.worker.postMessage({type:"event",id:c.id,data:n})};s.postMessage({type:"makeProxy",id:c.id}),t();for(const[n,r]of Object.entries(a))o.addEventListener(n,function(p){r(p,d)});function t(){const n=o.getBoundingClientRect();d({type:"size",left:n.left,top:n.top,width:o.clientWidth,height:o.clientHeight})}window.addEventListener("resize",t)}}let h;function k(e){e.focus();const o=e.transferControlToOffscreen();h=new Worker(new URL(""+new URL("offscreencanvas-worker-orbitcontrols-phEFVORL.js",import.meta.url).href,import.meta.url),{type:"module"});const s={contextmenu:H,mousedown:f,mousemove:f,mouseup:f,pointerdown:f,pointermove:f,pointerup:f,touchstart:u,touchmove:u,touchend:u,wheel:E,keydown:y},a=new j(e,h,s);h.postMessage({type:"start",canvas:o,canvasId:a.id},[o]),console.log("using OffscreenCanvas")}let v=!0;function C(){return v}function L(e){N({canvas:e,inputElement:e},C),console.log("using regular canvas")}function m(){const e=document.getElementById(g);e.transferControlToOffscreen?k(e):L(e)}return S(()=>{m()}),W(()=>{v=!1,h==null||h.terminate()}),(e,o)=>(z(),K("canvas",{id:X(g)},null,8,V))}});export{Z as default};
